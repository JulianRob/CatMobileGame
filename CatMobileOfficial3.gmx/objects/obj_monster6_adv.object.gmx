<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster6</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 0.3;
image_yscale = 0.3;

image_index = 0;
image_speed = 0.1;
sprite_index = spr_monster6;

count = 0;
count2 = 0;
count3 = 35;

death = 0;
rotation = 0;

stage1 = 0;
stage2 = 0;
stage3 = 0;
stage4 = 0;

limit1 = 0;
limit2 = 120;
limit3 = 100;
limit4 = 100;

//Default
ac = 0;
fall = 0;
hit = 5;
alpha_level = 0;
alpha_increment = .08;
blink = false;
counter1 = 0;
hp = 20;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (death &lt;= 0)
{
   if(stage1 == limit1)
   {
        sprite_index = spr_monster6;
        stage1+=1;
   }
   
   
   if (stage1 &gt;= limit1 &amp;&amp; stage2 &lt; limit2)
   {
       if(image_index &lt;= 2) //Down
        {
            y+= 0.5;
        }
        
        if(image_index &gt;= 3) //Up
        {
            y-= 0.5;
        }
    stage2+=1;
   }
   
   if(stage2 == limit2)
   {
    sprite_index = spr_monster6_suck;
    image_index = 0;
    image_speed = 0;
    stage2+=1;
   }
   
   if(stage2 &gt;= limit2 &amp;&amp; stage3 &lt; limit3)
   {
      
        if(count2 &lt;= 144)
        {
            switch(count2)
            {
                case 0: image_index = 0; break;
                case 9: image_index = 1; break;
                case 18: image_index = 0; break;
                case 27: image_index = 1; break;
                case 36: image_index = 2; break;
                case 45: image_index = 3; break;
                case 54: image_index = 2; break; 
                case 63: image_index = 3; break;
                case 72: image_index = 4; break;
                case 81: image_index = 5; break;
                case 90: image_index = 4; break;
                case 99: image_index = 5; break; 
                case 108: image_index = 6; break;
                case 117: image_index = 7; break; 
                case 126: image_index = 6; break;
                case 135: image_index = 7; break;
                case 144: image_index = 8; break;
            }
            count2+=1;
        }
        else
        {
            image_speed = .2;
        }
        
        if(image_index == 16)
        {
            stage3 = limit3;
        }
   }
   
   if(stage3 == limit3)
   {
        sprite_index = spr_monster6_attack;
        image_speed = 0;
        image_index = 0;
        stage3+=1;
   }
   
   if(stage3 &gt;= limit3 &amp;&amp; stage4 &lt; limit4)
   {
        if(count3 == 35)
        {
          rotation +=1;
            if(rotation &lt; 10)
            {
                instance_create(x,y+45,obj_monster6_wind);
            }
            count3 = 0;
        }
        
        switch(count3)
        {
            case 0: image_index = 0; break;
            case 9: image_index = 1; break;
            case 18: image_index = 2; break;
            case 27: image_index = 3; break;
        }
        count3+=1;   
        
        if(rotation == 10)
        {
            stage4 = limit4;
        }
   }
   
   if(stage4 == limit4)
   {
    image_index = 0;
    image_speed = .2;
    sprite_index = spr_monster6;
    stage4+=1;
   }
   
   if(stage4 &gt;= limit4)
   {
        y-= 5;
        if(y &lt;= -100)
        {
            instance_destroy();
        }
   }
   
   if(place_meeting(x,y,obj_laser) || place_meeting(x,y,obj_laser2) || place_meeting(x,y,obj_player_attack_hitbox))
    {
            audio_play_sound(snd_hurt,3,false);
            audio_sound_gain(snd_hurt,0.2,0);
    
            if(place_meeting(x,y,obj_player_attack_hitbox))
            {
                if(blink == false)
                {
                    hp -= 5;
                }
            }
            
            if(place_meeting(x,y,obj_laser2))
            {
                var inst = instance_place(x,y,obj_laser2);
                with(inst)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            if(place_meeting(x,y,obj_laser))
            {
                var inst2 = instance_place(x,y,obj_laser);
                with(inst2)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            blink = true;
            counter1 = 0;
            alpha_increment = 0.1;
            alpha_level = 0;
            if (hp &lt;= 0)
            {    
                sprite_index = spr_monster6_death;
                image_index = 0;
                death = 1;
                obj_player.kills += .2;
                obj_player.slay += 1;
            }
    }
    
    if (place_meeting(x,y,obj_MOD2) &amp;&amp; death!= 1)
    {
        blink = true;
        counter1 = 0;
        alpha_increment = 0.1;
        alpha_level = 0;   
        death = 1;
        image_index = 0;
        obj_player.slay += 1;
    }
    
    if(blink == true)
    {
        counter1+=1;
        
        alpha_level += alpha_increment;
        if(alpha_level &lt; 0 || alpha_level &gt; 1)
            alpha_increment = -alpha_increment;
            
        if(alpha_level &lt; 0)
        { 
              counter1 = 0;
              blink = false;
              alpha_incrememnt = 0.1;
              alpha_level = 0;
        }
    }
}

if(death == 3)
{
    x -= global.xmo + hit + ac;
    
    if (hit &gt; 0)
    {
        hit -=1;
    }
    else
    {
        hit = 0;
    }
    
    if (ac &gt; 0)
    {
        ac -=1;
    }
    else
    {
        ac = 0;
    }
    
    if(x &lt; -250)
    {
        instance_destroy();
    }
}

if(death == 2)
{
    y+=fall;
    x -= global.xmo + ac - hit;
    
    if(ac &gt; 0)
    {
        ac -= 1;
    }
    else
    {
        ac = 0;
    }
    
    fall += 1;
    
    if (hit &gt; 0)
    {
        hit -=1;
    }
    else
    {
        hit = 0;
    }
    
    if place_meeting(x,y,obj_gr)
    {
        death = 3;
        image_index = 5;
        hit = 5;
    }
}

if(death == 1)
{   
    sprite_index = spr_monster6_death;
    image_speed = .2;
    if(image_index &gt;= 5)
    {
        death+=1;
        image_speed = 0;
    }
    x-= 1+ ac;
}

if(death &gt;= 1) &amp;&amp; (blink &lt; 30)
{
        alpha_level += alpha_increment;
    if(alpha_level &lt; 0 || alpha_level &gt; 1)
        alpha_increment = -alpha_increment;
        blink++;
}

if(y &gt;= view_yview[0]+ view_yview[0]+100)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,1);

draw_set_blend_mode(bm_add);

draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,alpha_level);

draw_set_blend_mode(bm_normal);

if(counter1 == 0 || death == 3)
{
    draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
