<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trunning</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speedIncrease = 3;
hmaxSpeed = 10;
vmaxSpeed = 20;
grounded = false;

storeAngle = 0;
storeIteration = -1;

image_xscale = 0.8;
image_yscale = 0.8;
image_speed = 0.5; 

lLast = false;
rLast = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hspeed &gt;= hmaxSpeed)
{
    //hspeed -=(hspeed-hmaxSpeed)/2;
    hspeed = hmaxSpeed;
}

if(hspeed &lt;= -hmaxSpeed)
{
    //hspeed -= (hspeed + hmaxSpeed)/2;
    hspeed = -hmaxSpeed;
}

if(vspeed &gt;= vmaxSpeed)
{
    //vspeed -= (vspeed-vmaxSpeed)/2;
    vspeed = vmaxSpeed;
}

if(vspeed &lt;= -vmaxSpeed)
{
    //vspeed -= (vspeed + vmaxSpeed)/2;
    vspeed = -vmaxSpeed;
}

motion_add(270,1);

if(grounded)
{
    if(keyboard_check(ord("W")))
    {
        if(place_meeting(x+10,y,obj_stable_ground) &amp;&amp; !place_meeting(x-10,y,obj_stable_ground))
        {
            motion_add(160,20);
            grounded = false;
        }
        else if(place_meeting(x-10,y,obj_stable_ground) &amp;&amp; !place_meeting(x+10,y,obj_stable_ground))
        {
            motion_add(30,20);
            grounded = false;
        }
        else if(place_meeting(x,y+10,obj_stable_ground))
        {
            motion_add(90,20);
            grounded = false;
        }
    }
}

if(grounded)
{
  if(keyboard_check(ord("D")))
    {
        motion_add(direction,3)
        if(place_meeting(x+hspeed,y+vspeed,obj_stable_ground))
        {
            for(i = 0; place_meeting(x+hspeed,y+vspeed,obj_stable_ground); i++)
            {
                direction+=1;
                if(i &gt;= 360)
                {
                    speed = 0;
                    break;
                }
            }
        }
        else
        {
            for(i = 0; !place_meeting(x+hspeed,y+vspeed,obj_stable_ground);i++)
            {
                storeIteration = i;
                direction -=1;
                if(i &gt;= 360)
                {
                    speed = 0;
                    storeIteration = -1;
                    grounded = false;
                    break;
                }
            }
            
            if(storeIteration != -1)
            {
                direction+=1;
            }
            storeIteration = -1; 
        }
    }
    else if(keyboard_check(ord("A")))
    {
        motion_add(direction,3)
        if(place_meeting(x+hspeed,y+vspeed,obj_stable_ground))
        {
            for(i = 0; place_meeting(x+hspeed,y+vspeed,obj_stable_ground); i++)
            {
                direction-=1;
                if(i &gt;= 360)
                {
                    speed = 0;
                    break;
                }
            }
        }
        else
        {
           for(i = 0; !place_meeting(x+hspeed,y+vspeed,obj_stable_ground);i++)
            {
                storeIteration = i;
                direction +=1;
                if(i &gt;= 360)
                {
                    speed = 0;
                    storeIteration = -1;
                    grounded = false;
                    break;
                }
            }
            
            if(storeIteration != -1)
            {
                direction-=1;
            }
            storeIteration = -1; 
        }
    }
    else if(place_meeting(x+hspeed,y+vspeed,obj_stable_ground))
    {
        speed = 0;
    }
}
else
{
    if(keyboard_check(ord("D")))
    {
        motion_add(0,1)
    }
    else if(keyboard_check(ord("A")))
    {
        motion_add(180,1);
    }
    
    if(place_meeting(x+hspeed,y+vspeed,obj_stable_ground))
    {
        while(!place_meeting(x,y+sign(vspeed),obj_stable_ground))
        {
            y+= sign(vspeed);
        }
        speed = 0;
        grounded = true;
    }
}

if(place_meeting(x,y,obj_stable_ground))
{
    show_debug_message("AYY");
}

show_debug_message(grounded);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha); 

/*
if((grounded &amp;&amp; direction != 270))
{
    if(hspeed &gt; 0 &amp;&amp; keyboard_check(ord("D")))
    {
       draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha); 
       storeAngle = direction; 
       rLast = true;
       lLast = false;
    }
    else if(hspeed &lt; 0 &amp;&amp; keyboard_check(ord("A")))
    {
       draw_sprite_ext(sprite_index,image_index,x,y,-image_xscale,image_yscale,direction-180,image_blend,image_alpha); 
       storeAngle = direction; 
       rLast = false;
       lLast = true;
    }
    else
    {
        if(rLast)
        {
            draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,storeAngle,image_blend,image_alpha); 
        }
        else if(lLast)
        {
            draw_sprite_ext(sprite_index,image_index,x,y,-image_xscale,image_yscale,direction-180,image_blend,image_alpha); 
        }
        else
        {
             draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha); 
        }
    }
}
else if(!grounded)
{
    if(hspeed &lt; 0)
    {
       rLast = false;
       lLast = true;
    }
    else if(hspeed &gt; 0)
    {
       rLast = true;
       lLast = false;
    }
    
    
    if(rLast)
    {
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,image_blend,image_alpha);
        storeAngle = 0;
    }
    else if(lLast)
    {
        draw_sprite_ext(sprite_index,image_index,x,y,-image_xscale,image_yscale,0,image_blend,image_alpha); 
        storeAngle = 180;
    }
    else
    {
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,image_blend,image_alpha);
    }
}
else
{
    if(rLast)
    {
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,storeAngle,image_blend,image_alpha);
    }
    else if(lLast)
    {
        draw_sprite_ext(sprite_index,image_index,x,y,-image_xscale,image_yscale,storeAngle-180,image_blend,image_alpha); 
    }
    else
    {
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,storeAngle,image_blend,image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drops the framrate to 1

if(room_speed == 60)
{
    room_speed = 5;
}
else if(room_speed = 5)
{
    room_speed = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
