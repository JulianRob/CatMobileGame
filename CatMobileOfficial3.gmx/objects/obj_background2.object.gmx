<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cspeed = 6; //camera speed; was 10
initial = false;

active = false;
active2 = false;
active3 = false;

yPosition = 0;
initialPosition = 0;
newPosition = 0;
newPosition2 = 0;
range = 0;
limit = 200;

center = 100;
offset = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// VERTICAL MOVEMENT ATTEMPT #2

//VERTICAL CAMERA MOVEMENT
//Initializes the camera
if(initial == false)
{
if(instance_exists(obj_left) &amp;&amp; instance_exists(obj_right) &amp;&amp; instance_exists(obj_MOD) &amp;&amp; 
    instance_exists(obj_melee) &amp;&amp; instance_exists(obj_angled) &amp;&amp; instance_exists(obj_straight) 
    &amp;&amp; instance_exists(obj_up) &amp;&amp; instance_exists(obj_switch))
        {
            obj_left.y = obj_player.y+106;
            obj_right.y = obj_player.y+106;
            obj_MOD.y = obj_player.y+106;
            obj_melee.y = obj_player.y+106;
            obj_angled.y = obj_player.y+106;
            obj_straight.y = obj_player.y+106;
            obj_up.y = obj_player.y+106;
            obj_switch.y = obj_player.y+106;
        }
    obj_heart.y = obj_player.y-320;
    obj_kills.y = obj_player.y-320;
    obj_paws.y = obj_player.y-320;
    obj_background_controls.y = obj_player.y+106;
    view_yview[0] = obj_player.y-385; 
    background_y[0] = obj_player.y-385;
    
    initialPosition = obj_player.y-385;
    
    if(obj_player.grounded == 1)
    {
        initial = true;
    } 
}

//Going down obj_player.vsp &gt; 10 || 
if(obj_player.grounded == 1 &amp;&amp; initialPosition &gt;= view_yview[0] &amp;&amp; obj_player.downhill == true)
{
    active = false;
    active2 = true;
    active3 = false;
    range = abs(initialPosition - (obj_player.y-385));
    if(range &gt;= 200)
    {
        newPosition = obj_player.y+200-385;
    }
    else
    {
        newPosition = initialPosition;
    }
}

//Going Up
if(obj_player.grounded == 1 &amp;&amp; obj_player.y-385 &lt;= view_yview[0] &amp;&amp; obj_player.uphill == true)
{
   
    active = true;
    active2 = false;
    active3 = false;
    yPosition = obj_player.y-320
}

//Flat Ground
if(obj_player.grounded == 1 &amp;&amp; obj_player.flat == true &amp;&amp; initialPosition &gt;= view_yview[0])
{
    active = false;
    active2 = false;
    active3 = true;
    range = abs(initialPosition - (obj_player.y-385));
    if(range &gt;= 150)
    {
        newPosition = obj_player.y+150-385;
    }
    else
    {
        newPosition = initialPosition;
    }
}

//Changes in height
change = round((obj_heart.y - (yPosition))/10);
change2 = round(((newPosition) - view_yview[0])/10);

if(active == true)
{
    obj_left.y -= change;
    obj_right.y -= change;
    obj_MOD.y -= change;
    obj_melee.y -= change;
    obj_angled.y -= change;
    obj_straight.y -= change;
    obj_up.y -= change;
    obj_switch.y -= change;
    obj_heart.y -= change;
    obj_kills.y -= change;
    obj_paws.y -= change;
    obj_background_controls.y -= change;
    view_yview[0] -= change;
    background_y[0] -= change;
}

if(active2 == true)
{
    obj_left.y += change2;
    obj_right.y += change2;
    obj_MOD.y += change2;
    obj_melee.y += change2;
    obj_angled.y += change2;
    obj_straight.y += change2;
    obj_up.y += change2;
    obj_switch.y += change2;
    obj_heart.y += change2;
    obj_kills.y += change2;
    obj_paws.y += change2;
    obj_background_controls.y += change2;
    view_yview[0] += change2;
    background_y[0] += change2;
}

if(active3 == true)
{
    obj_left.y += change2;
    obj_right.y += change2;
    obj_MOD.y += change2;
    obj_melee.y += change2;
    obj_angled.y += change2;
    obj_straight.y += change2;
    obj_up.y += change2;
    obj_switch.y += change2;
    obj_heart.y += change2;
    obj_kills.y += change2;
    obj_paws.y += change2;
    obj_background_controls.y += change2;
    view_yview[0] += change2;
    background_y[0] += change2;
}

//SPRING
if(instance_exists(obj_spring.hit))
{
    if(obj_spring.hit == true)
    {
        obj_left.y = obj_player.y+106;
        obj_right.y = obj_player.y+106;
        obj_MOD.y = obj_player.y+106;
        obj_melee.y = obj_player.y+106;
        obj_angled.y = obj_player.y+106;
        obj_straight.y = obj_player.y+106;
        obj_up.y = obj_player.y+106;
        obj_switch.y = obj_player.y+106;
        obj_heart.y = obj_player.y-320;
        obj_kills.y = obj_player.y-320;
        obj_paws.y = obj_player.y-320;
        obj_background_controls.y = obj_player.y+106;
        view_yview[0] = obj_player.y-385; 
        background_y[0] = obj_player.y-385;
    }
    
    if(obj_player.grounded = 1)
    {
        obj_spring.hit = false;
    }
}



/* VERTICAL MOVEMENT ATTEMPT #3

//VERTICAL CAMERA MOVEMENT
    obj_left.y = obj_player.y+106+center;
    obj_right.y = obj_player.y+106+center;
    obj_MOD.y = obj_player.y+106+center;
    obj_melee.y = obj_player.y+106+center;
    obj_angled.y = obj_player.y+106+center;
    obj_straight.y = obj_player.y+106+center;
    obj_up.y = obj_player.y+106+center;
    obj_switch.y = obj_player.y+106+center;
    obj_heart.y = obj_player.y-320+center;
    obj_kills.y = obj_player.y-320+center;
    obj_paws.y = obj_player.y-320+center;
    obj_background_controls.y = obj_player.y+106+center;
    view_yview[0] = obj_player.y-385+center; 
    background_y[0] = obj_player.y-385+center;
    
*/


//HORIZONTAL CAMERA MOVEMENT

view_xview[0] += cspeed;
background_x[0] += cspeed;

obj_left.x += cspeed;
obj_right.x += cspeed;
obj_MOD.x += cspeed;
obj_melee.x += cspeed;
obj_angled.x += cspeed;
obj_straight.x += cspeed;
obj_up.x += cspeed;
obj_switch.x += cspeed;

obj_heart.x += cspeed;
obj_kills.x += cspeed;
obj_paws.x += cspeed;
obj_background_controls.x += cspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
