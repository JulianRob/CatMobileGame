<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cspeed = 6; //camera speed; was 10
initial = false;

active = false;
active2 = false;
active3 = false;

yPosition = 0;
initialPosition = 0;
newPosition = 0;
newPosition2 = 0;
range = 0;
limit = 200;

center = 0;
offset = 50;

start = 0;
long = 0;
follow = 0;
position = 0;
ip = 0; //initial position
np = 0; //new position

high = 0;
move = -200;
first = false;
rise = 5;

playerObject = obj_t3Player

scale = 0.45; //Scales Objects
yHeight = 26; //Moves Bottom UI
yView = 195; //Moves Screen
moveTop = 160; //Moves top UI
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_left) &amp;&amp; instance_exists(obj_right) &amp;&amp; instance_exists(obj_MOD) &amp;&amp; 
    instance_exists(obj_melee) &amp;&amp; instance_exists(obj_angled) &amp;&amp; instance_exists(obj_straight) 
    &amp;&amp; instance_exists(obj_up) &amp;&amp; instance_exists(obj_switch))
{
    
    //VERTICAL CAMERA MOVEMENT ATTEMPT #2
    //Initializes the camera
    if(initial == false)
    {
        //179? for 1.15 //106
        obj_left.y = playerObject.y+yHeight; 
        obj_right.y = playerObject.y+yHeight;
        obj_MOD.y = playerObject.y+yHeight;
        obj_melee.y = playerObject.y+yHeight;
        obj_angled.y = playerObject.y+yHeight;
        obj_straight.y = playerObject.y+yHeight;
        obj_up.y = playerObject.y+yHeight;
        obj_switch.y = playerObject.y+yHeight;  
        obj_background_controls.y = playerObject.y+yHeight;
        obj_heart.y = playerObject.y-moveTop;
        obj_kills.y = playerObject.y-moveTop; //??? 320
        obj_paws.y = playerObject.y-moveTop;
        view_yview[0] = playerObject.y-yView; 
        background_y[0] = playerObject.y-yView;
        
        view_xview[0] = playerObject.x-view_wview[0]/2;
        
        background_x[0] = playerObject.x-view_wview[0]/2;
        
        obj_left.x = view_xview[0]+(50*scale);
        obj_right.x = view_xview[0]+(150*scale);
        obj_MOD.x = view_xview[0]+(590*scale);
        obj_melee.x = view_xview[0]+(290*scale);
        obj_angled.x = view_xview[0]+(725*scale);
        obj_straight.x = view_xview[0]+(815*scale);
        obj_up.x = view_xview[0]+(910*scale);
        obj_switch.x = view_xview[0]+(440*scale);
        obj_heart.x =  view_xview[0]+(125*scale);
        obj_paws.x = view_xview[0]+(300*scale);
        
        obj_kills.x = view_xview[0]+(800);
        obj_background_controls.x = view_xview[0];
        
        initialPosition = room_height-yView; //playerObject.y-385  //400?
        
        if(playerObject.grounded == 1)
        {
            initial = true;
        } 
    }
    
  if(playerObject.grounded == true)
    {
        first = 0;
        high = 0;
    }
    
    //Going down playerObject.vsp &gt; 10 || 
    if(playerObject.grounded == 1 &amp;&amp; initialPosition &gt;= view_yview[0])
    {
        active = false;
        active2 = true;
        active3 = false;
        range = abs(initialPosition - (playerObject.y-yView));
        if(range &gt;= 200)
        {
            newPosition = playerObject.y+200-yView;
        }
        else
        {
            newPosition = initialPosition;
        }
    }
    
    //Going Up
    if(playerObject.grounded == 1 &amp;&amp; initialPosition &gt;= view_yview[0])
    {
       
        active = true;
        active2 = false;
        active3 = false;
        
        range = abs(initialPosition - (playerObject.y-yView));
        if(range &gt;= 50)
        {
            newPosition = playerObject.y+50-yView;
        }
        else
        {
            newPosition = initialPosition;
        }
        
        //yPosition = playerObject.y-320
    }
    
    //Flat Ground
    if(playerObject.grounded == 1 &amp;&amp; initialPosition &gt;= view_yview[0])
    {
        active = false;
        active2 = false;
        active3 = true;
        range = abs(initialPosition - (playerObject.y-yView));
        if(range &gt;= 50) //150
        {
            newPosition = playerObject.y+50-yView; //150
        }
        else
        {
            newPosition = initialPosition;
        }
    }
    
    //Changes in height
    change2 = round(((newPosition) - view_yview[0])/10);
    
    if(active == true)
    {
        obj_left.y += change2;
        obj_right.y += change2;
        obj_MOD.y += change2;
        obj_melee.y += change2;
        obj_angled.y += change2;
        obj_straight.y += change2;
        obj_up.y += change2;
        obj_switch.y += change2;
        obj_heart.y += change2;
        obj_kills.y += change2;
        obj_paws.y += change2;
        obj_background_controls.y += change2;
        view_yview[0] += change2;
        background_y[0] += change2;
    }
    
    if(active2 == true)
    {
        obj_left.y += change2;
        obj_right.y += change2;
        obj_MOD.y += change2;
        obj_melee.y += change2;
        obj_angled.y += change2;
        obj_straight.y += change2;
        obj_up.y += change2;
        obj_switch.y += change2;
        obj_heart.y += change2;
        obj_kills.y += change2;
        obj_paws.y += change2;
        obj_background_controls.y += change2;
        view_yview[0] += change2;
        background_y[0] += change2;
    }
    
    if(active3 == true)
    {
        obj_left.y += change2;
        obj_right.y += change2;
        obj_MOD.y += change2;
        obj_melee.y += change2;
        obj_angled.y += change2;
        obj_straight.y += change2;
        obj_up.y += change2;
        obj_switch.y += change2;
        obj_heart.y += change2;
        obj_kills.y += change2;
        obj_paws.y += change2;
        obj_background_controls.y += change2;
        view_yview[0] += change2;
        background_y[0] += change2;
    }

if (playerObject.grounded == false)
{
    for(i = 0; i &lt;= 150; i +=1)
    {
        if(position_meeting(playerObject.x,playerObject.y+i,obj_stable_ground))
               {
                    i = 151;
               }
           else if(i &gt;= 150)
           {
                high = 1;
           }
    }
}

if(high == 1)
{
    active = false;
    active2 = false;
    active3 = false;
    
    if (initialPosition &gt;= view_yview[0] + playerObject.vsp)
    {
        obj_left.y += playerObject.vsp;
        obj_right.y += playerObject.vsp;
        obj_MOD.y += playerObject.vsp;
        obj_melee.y += playerObject.vsp;
        obj_angled.y += playerObject.vsp;
        obj_straight.y += playerObject.vsp;
        obj_up.y += playerObject.vsp;
        obj_switch.y += playerObject.vsp;
        obj_heart.y += playerObject.vsp ;
        obj_kills.y += playerObject.vsp;
        obj_paws.y += playerObject.vsp;
        obj_background_controls.y += playerObject.vsp;
        view_yview[0] += playerObject.vsp;
        background_y[0] += playerObject.vsp;
    }
}
    
//HORIZONTAL CAMERA MOVEMENT  
view_xview[0] += playerObject.positionx;
background_x[0] += playerObject.positionx;

obj_left.x += playerObject.positionx;
obj_right.x += playerObject.positionx;
obj_MOD.x += playerObject.positionx;
obj_melee.x += playerObject.positionx;
obj_angled.x += playerObject.positionx;
obj_straight.x += playerObject.positionx;
obj_up.x += playerObject.positionx;
obj_switch.x += playerObject.positionx;

obj_heart.x += playerObject.positionx;
obj_kills.x += playerObject.positionx;
obj_paws.x += playerObject.positionx;
obj_background_controls.x += playerObject.positionx;
}

show_debug_message(string(view_xview) + " AND " + string(view_yview));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
