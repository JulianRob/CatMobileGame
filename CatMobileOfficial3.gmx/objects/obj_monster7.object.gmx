<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster7</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_monster7_intro; //Change This
image_speed = 0.5;

stage = 0;

vsp = 0;
hsp = 0;
grav = 10;
runLeft = -5;
runRight = 5;

//Default
image_xscale = 0.8;
image_yscale = 0.8;
ac = 0;
fall = 0;
hit = 5;
alpha_level = 0;
alpha_increment = .08;
blink = false;
counter1 = 0;
hp = 5;
death = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (death &lt;= 0)
{
    if(stage == 0)
    {
     if(instance_exists(obj_player) &amp;&amp; abs(x - obj_player.x) &lt;= 400)
        {
            stage = 1;
            sprite_index = spr_monster7_attack;
            image_index = 0;
            image_speed = 0.25;
        }
        else if(obj_player.x &lt; x)
        {
            if (place_meeting(x,y+vsp,obj_gr)) //If player meets ground within vertical speed
            {
                while(!place_meeting(x,y+sign(vsp),obj_gr)) //While not touching ground, add 1 to vertical height. 
                {
                    y+=sign(vsp); //1 is added to the y value moving the cat down. 
                }
                if (sign(vsp) == 1) //This will always be true since the cat is still considered to be in the air. 
                {
                    grounded = 1; //The cat is now grounded.    
                }
                vsp = 0;
            }
    
            if (instance_exists(obj_gr) &amp;&amp; place_meeting(x+runLeft,y+vsp,obj_gr))
                {
                    yplus = 0;
                    while(place_meeting(x+runLeft,y-yplus,obj_gr) &amp;&amp; yplus &lt;= abs(7*runLeft))
                    {
                        yplus += 1;
                    }
                    if(place_meeting(x+runLeft,y-yplus,obj_gr))
                    {
                        while(!place_meeting(x+sign(runLeft),y,obj_gr))
                        {
                            x+= sign(runLeft);
                        }   
                    }
                    else
                    {
                        y-=yplus;
                        hsp+=runLeft;
                    }
                }
                else
                {
                    hsp += runLeft;
                }
            
            x+=hsp;
            y+=vsp;
            vsp+=grav;
        }
        else if(obj_player.x &gt; x)
        {
            if (place_meeting(x,y+vsp,obj_gr)) //If player meets ground within vertical speed
            {
                while(!place_meeting(x,y+sign(vsp),obj_gr)) //While not touching ground, add 1 to vertical height. 
                {
                    y+=sign(vsp); //1 is added to the y value moving the cat down. 
                }
                if (sign(vsp) == 1) //This will always be true since the cat is still considered to be in the air. 
                {
                    grounded = 1; //The cat is now grounded.    
                }
                vsp = 0;
            }
    
            if (instance_exists(obj_gr) &amp;&amp; place_meeting(x+runRight,y+vsp,obj_gr))
                {
                    yplus = 0;
                    while(place_meeting(x+runRight,y-yplus,obj_gr) &amp;&amp; yplus &lt;= abs(7*runRight))
                    {
                        yplus += 1;
                    }
                    if(place_meeting(x+runRight,y-yplus,obj_gr))
                    {
                        while(!place_meeting(x+sign(runRight),y,obj_gr))
                        {
                            x+= sign(runRight);
                        }   
                    }
                    else
                    {
                        y-=yplus;
                        hsp+=runRight;
                    }
                }
                else
                {
                    hsp += runRight;
                }
            
            x+=hsp;
            y+=vsp;
            vsp+=grav;
        }
        
    }
    
    if(stage == 1)
    {
        if(image_index == 9 &amp;&amp; obj_player.x &lt; x)
        {
            instance_create(x-34,y-29,obj_monster7_projectile);
        }
        else if(image_index == 9 &amp;&amp; obj_player.x &gt;= x)
        {
            instance_create(x+34,y-29,obj_monster7_projectile);
        }
        
        if(image_index == 11)
        {
            stage = 0;
            sprite_index = spr_monster7_intro;
            image_index = 0;
            image_speed = 0.5;
        }
    }
    hsp = 0;  
    
    if(place_meeting(x,y,obj_laser) || place_meeting(x,y,obj_laser2) || place_meeting(x,y,obj_player_attack_hitbox))
    {
            audio_play_sound(snd_hurt,3,false);
            audio_sound_gain(snd_hurt,0.2,0);
    
            if(place_meeting(x,y,obj_player_attack_hitbox))
            {
                if(blink == false)
                {
                    hp -= 5;
                }
            }
            
            if(place_meeting(x,y,obj_laser2))
            {
                var inst = instance_place(x,y,obj_laser2);
                with(inst)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            if(place_meeting(x,y,obj_laser))
            {
                var inst2 = instance_place(x,y,obj_laser);
                with(inst2)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            blink = true;
            counter1 = 0;
            alpha_increment = 0.1;
            alpha_level = 0;
            if (hp &lt;= 0)
            {    
                sprite_index = spr_monster7_death;
                image_index = 0;
                death = 1;
                obj_player.kills += .2;
                obj_player.slay += 1;
            }
    }
    
    if (place_meeting(x,y,obj_MOD2) &amp;&amp; death!= 1)
    {
        blink = true;
        counter1 = 0;
        alpha_increment = 0.1;
        alpha_level = 0;   
        death = 1;
        image_index = 0;
        obj_player.slay += 1;
    }
    
    if(blink == true)
    {
        counter1+=1;
        
        alpha_level += alpha_increment;
        if(alpha_level &lt; 0 || alpha_level &gt; 1)
            alpha_increment = -alpha_increment;
            
        if(alpha_level &lt; 0)
        { 
              counter1 = 0;
              blink = false;
              alpha_incrememnt = 0.1;
              alpha_level = 0;
        }
    }
}

if(death == 2)
{
    instance_destroy();
    /*
     if(view_xview[0] &lt; x)
    {
        instance_destroy();
    }
    */
}

if(death == 1)
{   
    sprite_index = spr_monster7_death;
    image_speed = .2;
    if(image_index &gt;= 5)
    {
        death+=1;
        image_speed = 0;
    }
}

if(death &gt;= 1) &amp;&amp; (blink &lt; 30)
{
        alpha_level += alpha_increment;
    if(alpha_level &lt; 0 || alpha_level &gt; 1)
        alpha_increment = -alpha_increment;
        blink++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_player) &amp;&amp; obj_player.x &lt; x)
{
    draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,1);
    
    draw_set_blend_mode(bm_add);
    
    draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,alpha_level);
    
    draw_set_blend_mode(bm_normal);
    
    if(counter1 == 0 || death == 3)
    {
        draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,1);
    }
}
else
{
    draw_sprite_ext(sprite_index,-1,x,y,-0.8,0.8,0,c_white,1);
    
    draw_set_blend_mode(bm_add);
    
    draw_sprite_ext(sprite_index,-1,x,y,-0.8,0.8,0,c_white,alpha_level);
    
    draw_set_blend_mode(bm_normal);
    
    if(counter1 == 0 || death == 3)
    {
        draw_sprite_ext(sprite_index,-1,x,y,-0.8,0.8,0,c_white,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
