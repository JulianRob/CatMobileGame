<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster5</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 0.3;
image_yscale = 0.3;

death = 0;

ac = 0;
fall = 0;
hit = 5;
alpha_level = 0;
alpha_increment = 0.08;
blink = false;
counter1 = 0;
hp = 5;

stage0 = 0;
stage1 = 0;
stage2 = 0;
stage3 = 0;
stage4 = 0;

limit0 = 5;
limit1 = 1;
limit2 = 30;
limit3 = 15;
limit4 = 1;

sprite_index = spr_monster5_swim;
image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x-sprite_width/2 &gt; view_xview[0]+view_wview[0] || x+sprite_width/2 &lt; view_xview[0])
{
    instance_deactivate_object(self);
}

if !(death &gt;0)
{
    if (stage0 &lt; limit0)
    {
        stage0+=1;
    }
    
    if(stage0 == limit0)
    {
        image_index = 0;
        image_speed = 0.1;
        sprite_index = spr_monster5_charge;
        stage0 +=1;
       audio_play_sound(snd_monster5_charge,3,false);
       audio_sound_gain(snd_monster5_charge,0.3,0);
    }
    
    if (stage1 &lt; limit1)
    {
        if(image_index == 12)
        {
            instance_create(x-1,y-1,obj_monster5_energyball)
            stage1+=1;
        }
    }
    
    if(stage1 == limit1)
    {
        image_speed = 0;
        sprite_index = spr_monster5_recovery;
        image_index = 0;
        stage1+=1;
    }
    
    if(stage1 &gt;= limit1 &amp;&amp; stage2 &lt; limit2)
    {
        stage2+=1;
    }
    
    if(stage2 == limit2)
    {
        image_speed = 0.25;
        sprite_index = spr_monster5_recovery;
        image_index = 0;
        stage2+=1;
    }
    
    if(stage2 &gt;= limit2 &amp;&amp; stage3 &lt; limit3)
    {
        if(image_index == 1)
        {
            image_speed = 0;
        }
        stage3+=1;
    }
    
    if(stage3 == limit3)
    {
        image_speed = 0.25;
        sprite_index = spr_monster5_swim;
        image_index = 0;
        stage3+=1;
    }
    
    if(stage3 &gt;= limit3 &amp;&amp; stage4 &lt; limit4)
    {
        x-= 10;
    }
    
    if(place_meeting(x,y,obj_laser) || place_meeting(x,y,obj_laser2) || place_meeting(x,y,obj_player_attack_hitbox))
        {
            audio_play_sound(snd_hurt,3,false);
            audio_sound_gain(snd_hurt,0.2,0);
        
            if(place_meeting(x,y,obj_player_attack_hitbox))
            {
                if (blink == false)
                {
                    hp -=5;
                }
            }
            
            if(place_meeting(x,y,obj_laser2))
            {
                var inst = instance_place(x,y,obj_laser2);
                with(inst)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            if(place_meeting(x,y,obj_laser))
            {
                var inst2 = instance_place(x,y,obj_laser);
                with(inst2)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            blink = true;
            counter1 = 0;
            alpha_increment = 0.1;
            alpha_level = 0;
            
            if (hp &lt;= 0)
            {    
                death = 1;
                obj_player.kills += .2;
                obj_player.slay += 1;
            }
        }
    
        if (place_meeting(x,y,obj_MOD2) &amp;&amp; death &lt;= 0)
        {
            blink = true;
            counter1 = 0;
            alpha_increment = 0.1;
            alpha_level = 0;   
            death = 1;
            obj_player.slay += 1;
        }

    if(blink == true)
        {
            counter1+=1;
            
            alpha_level += alpha_increment;
            if(alpha_level &lt; 0 || alpha_level &gt; 1)
                alpha_increment = -alpha_increment;
                
            if(alpha_level &lt; 0)
            { 
                  counter1 = 0;
                  blink = false;
                  alpha_incrememnt = 0.1;
                  alpha_level = 0;
            }
        }
}

if(death == 3)
{
    x -= global.xmo + hit + ac;
    
    if (hit &gt; 0)
    {
        hit -=1;
    }
    else
    {
        hit = 0;
    }
    
    if (ac &gt; 0)
    {
        ac -=1;
    }
    else
    {
        ac = 0;
    }
}

if(death == 2)
{
    if(image_index == 6)
    {
        image_speed = 0;
        y+=fall;
        x -= global.xmo + ac - hit;
        
        if(ac &gt; 0)
        {
            ac -= 1;
        }
        else
        {
            ac = 0;
        }
        
        fall += 1;
        
        if (hit &gt; 0)
        {
            hit -=1;
        }
        else
        {
            hit = 0;
        }
    }
    
    if place_meeting(x,y,obj_gr)
    {
        death = 3;
        image_index = 7;
        hit = 5;
    }
}


if(death == 1)
{
    image_index = 0;   
    sprite_index = spr_monster5_death;
    image_speed = 0.1;
    x-= 1+ ac;
    death+=1;
}

if(death &gt;= 1) &amp;&amp; (blink &lt; 30)
{
    alpha_level += alpha_increment;
    if(alpha_level &lt; 0 || alpha_level &gt; 1)
        alpha_increment = -alpha_increment;
        blink++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,1);

draw_set_blend_mode(bm_add);

draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,alpha_level);

draw_set_blend_mode(bm_normal);

if(counter1 == 0 || death == 3)
{
    draw_sprite_ext(sprite_index,-1,x,y,0.3,0.3,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
