<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 0.8;
image_yscale = 0.8;

death = 0;

ac = 0; //acceleration
fall = 0;
hit = 5;
alpha_level = 0;
alpha_increment = 0.08;
blink = false;
counter1 = 0;
hp = 3;

stage1 = 0;
stage2 = 0;
stage3 = 0;
stage4 = 0;
stage5 = 0;
stage6 = 0;
stage7 = 0;

limit1 = 2;
limit2 = 1;
limit3 = 80;
limit4 = 90;
limit5 = 36;
limit6 = 22;
limit7 = 22;

attack = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(death &gt; 0)
{
    if(y &lt;= 86) &amp;&amp; (stage7 != limit7)
    {
        y+=2;
    }
    
    if!(y &lt; 86) &amp;&amp; (stage1 &lt; limit1)
    {
        image_speed = 0.25;
        sprite_index = spr_monster4_taunt;
        if(image_index = 5)
        {
            stage1+=1;
            image_index = 0;   
        }
    }
    
    if(stage1 == limit1)
    {
        image_index = 0;
        image_speed = 1/30;
        sprite_index = spr_monster4_look;
        stage1+=1;
    }
    
    if (stage1 &gt;= limit1) &amp;&amp; (stage2 &lt; limit2)
    {
        stage2+=1;
    }
    
    if(stage2 == limit2)
    {
        image_speed = 0;
        image_index = 1;
        stage2+=1;
    }
    
    if(stage2 &gt;= limit2) &amp;&amp; (stage3 &lt; limit3)
    {
        stage3+=1;
        if(abs(x-obj_player.x-55) &gt; 10)
        {
            x+=3;
        }
        else
        {
            stage3 = limit3;
            attack = 1;
            image_index = 0;
        }
    }
    
    if(stage3 == limit3)
    {
        image_speed = 1/30;
        image_index = 1;
        stage3+=1;
    }
    
    if(stage3 &gt;= limit3) &amp;&amp; (stage4 &lt; limit4) &amp;&amp; (attack == 0)
    {
        stage4+=1;
    }
    
    if(stage4 == limit4) &amp;&amp; (attack == 0)
    {
        image_speed = 0;
        if(abs(x-obj_player.x-55) &gt; 10)
        {
            x-=3;
        }
        else
        {
            stage4+=1;
            attack = 1;   
            image_index = 0;
        }
    }
    
    if(attack != 0) &amp;&amp; (stage5 &lt; limit5)
    {
        sprite_index = spr_monster4_charge;
        image_speed = 0.25;
        stage5+=1;
    }
    
    if(stage5 == limit5)
    {
        image_speed = 0.5;
        image_index = 0;
        sprite_index = spr_monster4_attack;
        stage5+=1;
    }
    
    if(stage5 &gt;= limit5) &amp;&amp; (stage6 &lt; limit6)
    {
        stage6+=1;
    }
    
    if(stage6 == limit6)
    {
        image_index = 3;
        instance_create(x,y,obj_monster4_ice);
        stage6 = 8;
        
        if(stage7 &lt; limit7)
        {
            stage7+=1;
        }
        else
        {
            image_speed = 0;
            image_index = 0;
            sprite_index = spr_monster4_empty;
            stage6 = limit6;
            stage6 +=1;
        }
    }
    
    if(stage7 == limit7)
    {
        y-=3;
        if(y &lt; -200)
        {
            instance_destroy(); //Destroys Instance of object
        }   
    }
    
    if(place_meeting(x,y,obj_laser) || place_meeting(x,y,obj_laser2) || place_meeting(x,y,obj_player_attack_hitbox))
    {
            audio_play_sound(snd_hurt,3,false);
            audio_sound_gain(snd_hurt,0.2,0);
    
            if(place_meeting(x,y,obj_player_attack_hitbox))
            {
                if(blink == false)
                {
                    hp -= 5;
                }
            }
            
            if(place_meeting(x,y,obj_laser2))
            {
                var inst = instance_place(x,y,obj_laser2);
                with(inst)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            if(place_meeting(x,y,obj_laser))
            {
                var inst2 = instance_place(x,y,obj_laser);
                with(inst2)
                {
                    instance_destroy();
                }
                hp-=1;
            }
            
            blink = true;
            counter1 = 0;
            alpha_increment = 0.1;
            alpha_level = 0;
            if (hp &lt;= 0)
            {    
                sprite_index = spr_monster4_death;
                image_index = 0;
                death = 1;
                obj_player.kills += .2;
                obj_player.slay += 1;
            }
    }
    
    if (place_meeting(x,y,obj_MOD2) &amp;&amp; death!= 1)
    {
        blink = true;
        counter1 = 0;
        alpha_increment = 0.1;
        alpha_level = 0;   
        death = 1;
        image_index = 0;
        obj_player.slay += 1;
    }
    
    if(blink == true)
    {
        counter1+=1;
        
        alpha_level += alpha_increment;
        if(alpha_level &lt; 0 || alpha_level &gt; 1)
            alpha_increment = -alpha_increment;
            
        if(alpha_level &lt; 0)
        { 
              counter1 = 0;
              blink = false;
              alpha_incrememnt = 0.1;
              alpha_level = 0;
        }
    }
}

if(death == 3)
{
    x -= global.xmo + hit + ac;
    
    if (hit &gt; 0)
    {
        hit -=1;
    }
    else
    {
        hit = 0;
    }
    
    if (ac &gt; 0)
    {
        ac -=1;
    }
    else
    {
        ac = 0;
    }
    
    if(x &lt; -250)
    {
        instance_destroy();
    }
}

if(death == 2)
{
    y+=fall;
    x -= global.xmo + ac - hit;
    
    if(ac &gt; 0)
    {
        ac -= 1;
    }
    else
    {
        ac = 0;
    }
    
    fall += 1;
    
    if (hit &gt; 0)
    {
        hit -=1;
    }
    else
    {
        hit = 0;
    }
    
    if place_meeting(x,y,obj_gr)
    {
        death = 3;
        image_index = 1;
        hit = 5;
    }
}

if(death == 1)
{   
    sprite_index = spr_monster4_death;
    image_speed = 1/3;
    if(image_index &gt;= 2)
    {
        death+=1;
        image_speed = 0;
    }
    x-= 1+ ac;
}

if(death &gt;= 1) &amp;&amp; (blink &lt; 30)
{
        alpha_level += alpha_increment;
    if(alpha_level &lt; 0 || alpha_level &gt; 1)
        alpha_increment = -alpha_increment;
        blink++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,1);

draw_set_blend_mode(bm_add);

draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,alpha_level);

draw_set_blend_mode(bm_normal);

if(counter1 == 0 || death == 3)
{
    draw_sprite_ext(sprite_index,-1,x,y,0.8,0.8,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
